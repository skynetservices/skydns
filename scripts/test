#!/usr/bin/env bash

set -e

ETCD=v3.0.6

CDIR=$(cd `dirname "$0"`/.. && pwd)
cd "$CDIR"

ORG_PATH="github.com/skynetservices"
REPO_PATH="${ORG_PATH}/skydns"

if [ ! $(command -v go 2>/dev/null) ]; then
  echo "build: failed to locate Go binaries."
  exit 1
fi

if [ ! -h gopath/src/${REPO_PATH} ]; then
  mkdir -p gopath/src/${ORG_PATH}
  ln -s ../../../.. gopath/src/${REPO_PATH} || exit 255
fi

export GO15VENDOREXPERIMENT=1
export GOPATH="${CDIR}/gopath"
eval $(go env)

echo "Test skydns..."

if [ ! -x "${GOPATH}/etcd-${ETCD}-linux-amd64/etcd" ]; then
  curl -L "https://github.com/coreos/etcd/releases/download/${ETCD}/etcd-${ETCD}-linux-amd64.tar.gz" | tar xzvf - -C "${GOPATH}"
fi

cd gopath
rm -rf default.etcd
"${GOPATH}/etcd-${ETCD}-linux-amd64/etcd" >> ${GOPATH}/etcd.log 2<&1 &
ETCD_PID=$!
trap "kill ${ETCD_PID}" EXIT
cd ../

PACKAGES=$(go list ./... | grep -v /vendor/ | grep ^_)
# Escape current cirectory
CDIR_ESC=$(printf "%q" "$CDIR")
# Remove current directory from the package path
PACKAGES=${PACKAGES//$CDIR_ESC}
# Remove underscores
PACKAGES=${PACKAGES//_/}
# split PACKAGES into an array and prepend REPO_PATH to each local package
split=(${PACKAGES// / })
PACKAGES=${split[@]/#/${REPO_PATH}/}

go test -tags etcd -bench=. $PACKAGES
